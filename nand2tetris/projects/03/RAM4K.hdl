// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM4K.hdl

/**
 * Memory of 4K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM4K {
    IN in[16], load, address[12];
    OUT out[16];

    PARTS:
    DMux8Way(in=load, sel=address[9..11], a=ren0, b=ren1, c=ren2, d=ren3, e=ren4, f=ren5, g=ren6, h=ren7);

    RAM512(in=in, load=ren0, address=address[0..8], out=rda0);
    RAM512(in=in, load=ren1, address=address[0..8], out=rda1);
    RAM512(in=in, load=ren2, address=address[0..8], out=rda2);
    RAM512(in=in, load=ren3, address=address[0..8], out=rda3);
    RAM512(in=in, load=ren4, address=address[0..8], out=rda4);
    RAM512(in=in, load=ren5, address=address[0..8], out=rda5);
    RAM512(in=in, load=ren6, address=address[0..8], out=rda6);
    RAM512(in=in, load=ren7, address=address[0..8], out=rda7);

    Mux8Way16(a=rda0, b=rda1, c=rda2, d=rda3, e=rda4, f=rda5, g=rda6, h=rda7, sel=address[9..11], out=out);
}
